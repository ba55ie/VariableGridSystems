/*
VARIABLES
*/

//user variables grid system
$column-amount: 6;
$gutter-width: 1rem;

//breakpoints
$breakpoints: (
  xs: 32rem,
  s: 48rem,
  m: 72rem,
  l: 96rem,
  xl: 102rem
);

/*
MIXINS
*/
@mixin break($size) {  
    @media (min-width: map-get($breakpoints, $size)) {
        @content;
    }
}

/*
FUNCTIONS
*/
@function calculate-width($counter: $counter) {
    @return ($counter) * $extra-column-width;
}


//calculate the number of extra columns needed to fill out the total width
$total-width: 100%;
$extra-columns: $column-amount * (($column-amount + 1)/2);
$extra-column-width: $total-width / $extra-columns;


/*
DEFINE THE DEFAULT ROW & COL
*/
.container {
    max-width: 1400px;
    margin: 0 auto;
}

.grid {
    padding: 0 ($gutter-width/2);
}

.row {
    display: block;
    position: relative;
    clear:both;
    margin: 0 (-$gutter-width/2);

    
    .cell {
        box-sizing: border-box;
        position: relative;
        padding: 0 ($gutter-width/2);
        margin: 0;
        float: left;
    }
}


/*
DEFINE THE COLUMNS
*/
$class-prefix: cell;

@for $i from 1 through $column-amount {
    //calculate the width
    $this-column-width: calculate-width($i);

    .#{$class-prefix}--#{$i} {
        width: $this-column-width;
    }

    $k: $i;
    @if $i < $column-amount {
        //reset the span width
        $span-width: 0;
        
        @for $j from ($k) through $column-amount {
            //calculate the spanned width
            $span-width: $span-width + calculate-width($j);;

            .#{$class-prefix}--#{$i}-#{$j} {
                width: $span-width;
            }
        }        
    }
}

@each $key, $value in $breakpoints {
    @for $i from 1 through $column-amount {
        //calculate the width
        $this-column-width: calculate-width($i);

        .#{$class-prefix}--#{$key}-#{$i} {
            @include break($key) {
                width: $this-column-width;
            }
        }

        $k: $i;
        @if $i < $column-amount {
            //reset the span width
            $span-width: 0;
            
            @for $j from ($k) through $column-amount {
                //calculate the spanned width
                $span-width: $span-width + calculate-width($j);;
                @if ($i != $j) {
                    .#{$class-prefix}--#{$key}-#{$i}-#{$j} {
                        @include break($key) {
                            width: $span-width;
                        }
                    }                    
                }
            }        
        }
    }
}
