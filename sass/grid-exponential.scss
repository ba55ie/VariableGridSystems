/*
SET VARIABLES
*/

//user variables grid system
$column-amount: 6;
$gutter-width: 1rem;
$bleed: true;

//calculate the number of extra columns needed to fill out the total width
$total-width: 100%;
$extra-columns: $column-amount * (($column-amount + 1)/2);
$extra-column-width: $total-width / $extra-columns;

/*
DEFINE FUNCTIONS
*/
@function calculate-width($counter: $counter) {
    @return ($counter) * $extra-column-width;
}

/*
DEFINE THE DEFAULT ROW & COL
*/
.container {
    max-width: 1400px;
    margin: 0 auto;
}

.grid {
    padding: 0 ($gutter-width/2);
}

.row {
    display: block;
    position: relative;
    clear:both;
    margin: 0 (-$gutter-width/2);

    
    .cell {
        box-sizing: border-box;
        position: relative;
        padding: 0 ($gutter-width/2);
        margin: 0;
        float: left;
        font-family: sans-serif;
        font-size: 1.25rem;
    }
    
    @if($bleed) {
        [class*='cell-']:last-of-type {
            padding-right: 0;
        }

        [class*='cell-']:first-of-type {
            padding-left: 0;
        }
    }
    @else {
        [class*='cell-']:last-of-type {
            padding-right: $gutter-width;
        }

        [class*='cell-']:first-of-type {
            padding-left: $gutter-width;
        }
    } 
}


/*
DEFINE THE COLUMNS
*/

$class-prefix: cell;

@for $i from 1 through $column-amount {
    //calculate the width
    $this-column-width: calculate-width($i);

    .#{$class-prefix}-#{$i} {
        width: $this-column-width;
    }

    $k: $i + 1;
    @if $i < $column-amount {
        //reset the span width
        $span-width: 0;
        
        @for $j from ($k - 1) through $column-amount {
            //calculate the spanned width
            $span-width: $span-width + calculate-width($j);;

            .#{$class-prefix}-#{$i}-#{$j} {
                width: $span-width;
            }
        }        
    }
}

